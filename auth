#!/bin/bash

set -eu
set -o pipefail

if [ "$#" != 1 ]
then
    echo "$0 <IP address>" >&2
    echo
    exit 1
fi

H="$1"

if [[ ! -v XLED_DEBUG ]]
then
    if [ -t 1 ]
    then
        XLED_DEBUG=1
    else
        XLED_DEBUG=0
    fi
fi

function debug()
{
    if [ "$XLED_DEBUG" -ne 0 ]
    then
        echo "$@" >&2
    fi
}

debug "Login..."
E="/xled/v1/login"
C="$(head -c 32 /dev/urandom | base64)"
debug " - challenge (b64): $C"
mapfile -t lines < <(curl --silent -X POST -H "Content-Type: application/json" -d '{"challenge":"'"$C"'"}' "http://$H$E" | jq -r '(.authentication_token, .["challenge-response"])')

if [ "${#lines[@]}" -ne 2 ]
then
    echo "Failed to get login data" >&2
    exit 1
fi
authentication_token="${lines[0]}"
challenge_response="${lines[1]}"

debug "Login responded with:"
debug "- authentication_token: $authentication_token"
debug "- challenge-response: $challenge_response"

debug "Verify:"
debug " - challenge-response: $challenge_response"
E="/xled/v1/verify"
code=$(curl --silent -X POST -H "Content-Type: application/json" -H "X-Auth-Token: $authentication_token" -d '{"challenge-response": "'"$challenge_response"'"}' "http://$H$E" | jq -r .code)

if [ "$code" -ne 1000 ]
then
    echo "Failed to verify: $code" >&2
    exit 1
fi

echo "$authentication_token"
